## Default values for orion.
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.

# -- option to override the name config in the _helpers.tpl
nameOverride: ""
# -- option to override the fullname config in the _helpers.tpl
fullnameOverride: ""

## configuration for the k8s service to access orion
service:
  # -- service type
  type: ClusterIP
  # -- port to be used by the service
  port: 1026
  # -- addtional annotations, if required
  annotations: {}

# -- if a orion specific service account should be used, it can be configured here
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # -- specifies if the account should be created
  create: false

## deployment specific configuration
deployment:
  # -- initial number of target replications, can be different if autoscaling is enabled
  replicaCount: 1
  # -- number of old replicas to be retained
  revisionHistoryLimit: 3
  ## configuration of the orion update strategy
  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 1
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 0
  ## configuration of the image to be used
  image:
    # -- orion image name
    # ref: https://hub.docker.com/r/fiware/orion/
    # ref: https://quay.io/repository/fiware/orion-ld
    repository: quay.io/fiware/orion-ld
    #repository: fiware/orion
    # -- tag of the image to be used
    tag: 1.1.0
    # -- specification of the image pull policy
    pullPolicy: IfNotPresent
  # -- additional labels for the deployment, if required
  additionalLabels:
    sidecar-injection: happycattle
  # -- additional annotations for the deployment, if required
  additionalAnnotations:
    sidecar.k8s.fiware.org/request: "envoy-sidecar"
  # -- orion resource requests and limits, we leave the default empty to make that a concious choice by the user.
  # for the autoscaling to make sense, you should configure this.
  # resources:
    # limits:
      # cpu: 100m
      # memory: 128Mi
    # requests:
      # cpu: 100m
      # memory: 128Mi
  # -- selector template
  # ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}
  # -- tolerations template
  # ref: ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  # -- affinity template
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## liveness and readiness probes of the orion broker, they will be evaluated against the version endpoint
  # ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30
  # -- additional sidepods for the deployment, if required
  sidecars: []
  # -- additional volumes for the deployment, if required
  volumes: []

## pod autoscaling configuration, use for automatic scaling of the broker pods
autoscaling:
  # -- should autoscaling be enabled for the context broker
  enabled: false
  # -- minimum number of running pods
  minReplicas: 1
  # -- maximum number of running pods
  maxReplicas: 10
  # -- metrics to react on
  metrics: []


## openshift specific route definition. Will not work on plain k8s
route:
  ## -- should the deployment create openshift routes
  enabled: false
  # -- annotations to be added to the route
  annotations: 
    cert-utils-operator.redhat-cop.io/certs-from-secret: "fiware-dev-wildcard-tls-secret"
  # -- host to be used
  host: orion.fiware.dev
  # -- tls configuration for the route
  tls: 
    termination: edge
  # termination: edge

## ingress configuration
ingress:
  # -- should there be an ingress to connect orion with the public internet
  enabled: false



## orion-broker specific configuration
# see defaults of the unset values at:
# ref: https://fiware-orion.readthedocs.io/en/master/admin/cli/index.html
broker:
  # -- Prefix to be used for env-vars in orion. Must be ORION_ for orion and ORIONLD_ for orion-ld
  envPrefix: ORIONLD_
  # -- port that the broker is listening to
  port: 1026
  # -- set to true if only ipv6 should be used, do not set both options to true
  ipv6enabled: false
  # -- set to true if only ipv4 should be used, do not set both options to true
  ipv4enabled: false
  # -- should the extended development tracing be disabled?
  noDevTrace: true
  # -- configuration of temporal entity representation
  troe:
    # -- should temporal representation of entities be enabled
    enabled: false
    # -- host of the postgres to be used
    dbHost: postgres
    # -- port of the postgres to be used
    dbPort: 5432
    # -- username to authenticate with at postgres
    dbUser: user
    # -- password to authenticate with at postgres
    dbPassword: password


  ## logging configuration of the orion broker
  logging:
    # -- log level of the broker
    level: "WARN"

  ## database configuration
  db:
    # -- configuration of the mongo-db hosts. if multiple hosts are inserted, its assumed that mongo is running as a replica set
    hosts:
      - mongodb
    # - mongodb
    # -- the db to use. if running in multiservice mode, its used as a prefix.
    name: orion


  ## configratuion of orion metrics
  metrics:
    # -- enable or disable metrics gathering
    enabled: "false"


## Configuration for embedding mongodb into the chart. Do not use this in production.
mongo:
  # -- should mongodb be enabled
  enabled: false

test:
  enabled: false